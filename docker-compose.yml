services:
  redis:
    image: redis:7
    container_name: eemr-redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: eemr-backend
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --no-access-log
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import urllib.request; urllib.request.urlopen(\"http://127.0.0.1:8000/\")' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  worker:
    build: ./backend
    container_name: eemr-worker
    command: python -m dramatiq app.tasks
    volumes:
      - ./backend:/app
    environment:
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy

  frontend:
    build: ./frontend
    container_name: eemr-frontend
    command: npm run dev -- --hostname 0.0.0.0 --port 3000
    volumes:
      - ./frontend:/app
      - /app/node_modules 
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    container_name: eemr-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    container_name: eemr-grafana
    ports:
      - "3001:3000"  # use 3001 to avoid conflict with frontend
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
